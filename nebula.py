from modules.starter.starter import config
from modules.me_handler import *
from modules.game_handler import *
from modules.peh.peh import peh_handler
from modules.utils.files import *


energy_list = ['üåè –°–µ—Ä–≤–µ—Ä –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω.\n\n‚ö°Ô∏è –≠–Ω–µ—Ä–≥–∏—è –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–∞',
               '‚ö°Ô∏è –≠–Ω–µ—Ä–≥–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ –º–∞–∫—Å–∏–º—É–º–∞!',
               '‚ö°Ô∏è +1 –∫ —ç–Ω–µ—Ä–≥–∏–∏']


def main():
    if config['password'] is None:
        client.start()
    else:
        client.start(password=config['password'])
    # me = await client.get_me()
    # print('added handlers')
    client.add_event_handler(user_handler)
    client.add_event_handler(game_handler)
    client.add_event_handler(peh_handler)
    asyncio.ensure_future(client.send_message('me', '–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω'))
    # print('sent to me')
    asyncio.ensure_future(client.send_message(const['game'], '/hero'))
    read_file('hero')
    asyncio.ensure_future(status())
    client.run_until_disconnected()


async def status():
    status_text = ''
    for i in hero:
        status_text += f"{i}: {hero[i]}\n"
    await client.send_message('me', f"–ó–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: \n\n{status_text}")


if __name__ == '__main__':
    main()
