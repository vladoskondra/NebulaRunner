from modules.starter.starter import config
from modules.me_handler import *
from modules.game_handler import *
from modules.peh.peh import peh_handler
from modules.utils.files import *
from modules.utils.script_tools import boolean_emojis


energy_list = ['üåè –°–µ—Ä–≤–µ—Ä –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω.\n\n‚ö°Ô∏è –≠–Ω–µ—Ä–≥–∏—è –≤–æ—Å–ø–æ–ª–Ω–µ–Ω–∞',
               '‚ö°Ô∏è –≠–Ω–µ—Ä–≥–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ –º–∞–∫—Å–∏–º—É–º–∞!',
               '‚ö°Ô∏è +1 –∫ —ç–Ω–µ—Ä–≥–∏–∏']


def main():
    if config['password'] is None:
        client.start()
    else:
        client.start(password=config['password'])
    client.add_event_handler(user_handler)
    client.add_event_handler(game_handler)
    client.add_event_handler(peh_handler)
    asyncio.ensure_future(client.send_message('me', '–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω'))
    # asyncio.ensure_future(client.send_message(const['game'], '/hero'))
    read_file('hero')
    asyncio.ensure_future(status())
    client.run_until_disconnected()


async def status():
    HERO = hero['hero']
    GNR_CFG = hero['general_cfg']
    FARM_CFG = hero['farm_cfg']
    PROF_CFG = hero['prof_cfg']
    SPACE = hero['space']
    status_text = f"**–ü–µ—Ä—Å–æ–Ω–∞–∂:** {HERO['name']}\n" \
                  f"**–õ–≤–ª.:** {HERO['lvl']}\n" \
                  f"**–†–µ–∂–∏–º:** {hero['mode']}\n" \
                  f"**–ü–æ—Å–ª–µ–¥–Ω—è—è –ª–æ–∫–∞—Ü–∏—è:** {hero['cur_loc']}\n" \
                  f"**–ü—Ä–æ—Ö–æ–¥ –∫–∞–ø—Ç—á–∏:** {boolean_emojis(GNR_CFG['captcha'])}\n" \
                  f"**–≠–¥–µ–º:** {boolean_emojis(GNR_CFG['edem'])}\n" \
                  f"**–ö–æ—Å–º–æ—Å:** {boolean_emojis(SPACE['cosmos'])}\n\n" \
                  f"**===== –ì–†–ò–ù–î =====**\n" \
                  f"**–õ–æ–∫–∞:** {FARM_CFG['farm_loc']}\n" \
                  f"**–ú–æ–±—ã:** {FARM_CFG['mob_lvl']} {FARM_CFG['mob_cls']}\n" \
                  f"**–ì—Ä–∏–Ω–¥ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π:** {boolean_emojis(FARM_CFG['any_lvls'])}\n" \
                  f"**–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π —Ö–∏–ª:** {boolean_emojis(FARM_CFG['force_heal'])}\n\n" \
                  f"**===== –ü–†–û–§–ê =====**\n" \
                  f"**–†–µ—Å—É—Ä—Å:** {PROF_CFG['prof']}\n" \
                  f"**–õ–æ–∫–∞:** {FARM_CFG['prof_loc']}\n" \
                  f"**–õ–æ–≤–∏—Ç—å —Ä–µ–¥–∫–∏–µ:** {boolean_emojis(PROF_CFG['catch_rare'])}\n" \
                  f"**–ú—É–ª—å—Ç–∏—Ç—É–ª:** {boolean_emojis(PROF_CFG['multitool'])}\n\n" \
                  f"**===== –ö–û–°–ú–û–° =====**\n" \
                  f"**–ñ–¥–∞—Ç—å —Ä–µ—Å–∞ –º–æ–±–∞:** {boolean_emojis(not SPACE['cosmos_farm_seek'])}\n"
    await client.send_message('me', f"–ó–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: \n\n{status_text}")
    const['orig_msg_status'] = f'–í–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º **{hero["mode"]}**'
    const["msg_status"] = await client.send_message('me', const['orig_msg_status'])


if __name__ == '__main__':
    main()
