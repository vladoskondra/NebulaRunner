from telethon import events
import asyncio
from modules.starter.starter import client, hero, const
from modules.peh.peh import get_peh_point
from modules.utils.files import update_file


@events.register(events.NewMessage(chats='me', from_users='me'))
async def user_handler(event):
    message = event.message.to_dict()
    text = message['message']
    if text.lower() == '.help':
        await client.send_message('me', '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n'
                                        '.farm ‚Äî —Ä–µ–∂–∏–º –æ–±—ã—á–Ω–æ–≥–æ –≥—Ä–∏–Ω–¥–∞ –º–æ–±–æ–≤\n'
                                        '.boost ‚Äî —Ä–µ–∂–∏–º –≥—Ä–∏–Ω–¥–∞ —Å –±–∞–Ω–∫–∞–º–∏\n'
                                        '.peh ‚Äî —Ä–µ–∂–∏–º –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –Ω–∞ –ü–ï–•–µ (–ø–µ—Ä–µ–¥ –≤–∫–ª—é—á–µ–Ω–∏–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–ª–µ—Ç–µ—Ç—å –¥–æ –û—Å—Ç—Ä–æ–≤–æ–≤)\n'
                                        '.stop ‚Äî –ø–æ—Å—Ç–∞–≤–∏—Ç—å –±–æ—Ç–∞ –Ω–∞ –ø–∞—É–∑—É\n'
                                        '.farm_loc ‚Äî —É–∫–∞–∑–∞—Ç—å –ª–æ–∫–∞—Ü–∏—é –¥–ª—è —Ñ–∞—Ä–º–∞ '
                                        '(—É–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –∏–∑ –∏–≥—Ä—ã –≤–º–µ—Å—Ç–µ —Å —ç–º–æ–¥–∑–∏ '
                                        '–∏–ª–∏ "–ë—É–∫–≤–∞–ß–∏—Å–ª–æ"-–Ω–∞–∑–≤–∞–Ω–∏—è –ø–ª–∞–Ω–µ—Ç—ã –¥–ª—è –∫–æ—Å–º–æ—Å–∞)\n'
                                        '.prof_loc ‚Äî —É–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –¥–æ–±—ã—á–∏ —Ä–µ—Å—É—Ä—Å–æ–≤: —Ç—Ä–∞–≤–∞, –∫–∞–º–µ–Ω—å, –ª–µ—Å, —Ä—ã–±–∞\n'
                                        '.edem on/off ‚Äî –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Ñ–∞—Ä–º –≤ –≠–¥–µ–º–µ (—ç—Ç–æ –Ω–µ –∑–∞–º–µ–Ω–∞ —Ä–µ–∂–∏–º—É .farm –∏–ª–∏ .boost)\n'
                                        '.multitool on/off ‚Äî –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –¥–æ–±—ã—á—É —Ä–µ—Å—É—Ä—Å–æ–≤ –º—É–ª—å—Ç–∏—Ç—É–ª–æ–º\n'
                                        '.cosmos on/off ‚Äî –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Ñ–∞—Ä–º –≤ –∫–æ—Å–º–æ—Å–µ (—ç—Ç–æ –Ω–µ –∑–∞–º–µ–Ω–∞ —Ä–µ–∂–∏–º—É .farm –∏–ª–∏ .boost)\n'
                                        '.captcha on/off ‚Äî –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–∞–ø—á–∏')
    if text == '.stop' or text == '.farm' or text == '.dg' or text == '.boost' or text == '.peh':
        hero['mode'] = text.split('.')[1]
        const['orig_msg_status'] = f'–í–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º **{hero["mode"]}**'
        if text.lower() == '.stop':
            const['orig_msg_status'] = f'–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
            hero['state'] = 'none'
            hero['loc'] = 'default'
        const["msg_status"] = await client.send_message('me', const['orig_msg_status'])
        if hero['farm_loc'] == 'none':
            msg_to_del = await client.send_message('me',
                                                   f'–ù–µ —É–∫–∞–∑–∞–Ω–∞ –ª–æ–∫–∞—Ü–∏—è –¥–ª—è —Ñ–∞—Ä–º–∞, –∏—Å–ø–æ–ª—å–∑—É–π "`.farm_loc` " '
                                                   f'–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, —á—Ç–æ–± –≤—ã—Å—Ç–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é')
            await asyncio.sleep(60)
            await client.delete_messages('me', msg_to_del)
        if hero['prof_loc'] == 'none':
            msg_to_del = await client.send_message('me',
                                                   f'–ù–µ —É–∫–∞–∑–∞–Ω–∞ –ª–æ–∫–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ—Ñ—ã, –∏—Å–ø–æ–ª—å–∑—É–π "`.prof_loc` " '
                                                   f'–∏ –≤–∏–¥ –¥–æ–±—ã—á–∏ (–ª–µ—Å, —Ç—Ä–∞–≤–∞, —Ä—ã–±–∞ –∏–ª–∏ –∫–∞–º–µ–Ω—å)')
            await asyncio.sleep(60)
            await client.delete_messages('me', msg_to_del)
    if '.edem ' in text:
        if text == '.edem on':
            hero['edem'] = True
            await event.reply('–í–∫–ª—é—á–µ–Ω –≠–¥–µ–º')
        elif text == '.edem off':
            hero['edem'] = False
            await event.reply('–í—ã–∫–ª—é—á–µ–Ω –≠–¥–µ–º')
    if '.farm_loc ' in text:
        hero['farm_loc'] = text.split('farm_loc ')[1]
        await event.reply(f'–õ–æ–∫–∞—Ü–∏—è –¥–ª—è —Ñ–∞—Ä–º–∞: **{hero["farm_loc"]}**')
    if '.prof_loc ' in text:
        prof = text.split('prof_loc ')[1]
        hero['prof'] = prof
        if prof == '—Ä—ã–±–∞':
            if not hero['edem']:
                hero['prof_loc'] = 'üèù –ü–æ–±–µ—Ä–µ–∂—å–µ –ö–∞—Ä—Ö–∞'
            else:
                hero['prof_loc'] = 'üåâ –î–∏—Å—Ç—Ä–∏–∫—Ç –í–∞–π—Ä–µ—Å—Å'
        elif prof == '–ª–µ—Å' or prof == '—Ç—Ä–∞–≤–∞':
            if not hero['edem']:
                hero['prof_loc'] = 'üå≥ –õ–µ—Å –ü—Ä–µ–¥—Ç–µ—á'
            else:
                if prof == '–ª–µ—Å':
                    hero['prof_loc'] = 'üåÉ –î–∏—Å—Ç—Ä–∏–∫—Ç –ê–ø–ø–∞–ª–∞—á–∏'
                elif prof == '—Ç—Ä–∞–≤–∞':
                    hero['prof_loc'] = 'üåá –î–∏—Å—Ç—Ä–∏–∫—Ç –î—Ä–µ–≤–Ω–∏—Ö'
        elif prof == '–∫–∞–º–µ–Ω—å':
            if not hero['edem']:
                hero['prof_loc'] = 'üßä –ö–≤–∞—Ä—Ü–µ–≤–æ–µ –ü–ª–∞—Ç–æ'
            else:
                hero['prof_loc'] = 'üåÉ –î–∏—Å—Ç—Ä–∏–∫—Ç –ê–ø–ø–∞–ª–∞—á–∏'
        await event.reply(f'–õ–æ–∫–∞—Ü–∏—è –¥–ª—è —Ñ–∞—Ä–º–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ {hero["prof"]}: **{hero["prof_loc"]}**')
    if '.multitool ' in text:
        if text == '.multitool on':
            hero['multitool'] = True
            await event.reply('–í–∫–ª—é—á–µ–Ω üî´–ú—É–ª—å—Ç–∏—Ç—É–ª')
        elif text == '.multitool off':
            hero['multitool'] = False
            await event.reply('–í—ã–∫–ª—é—á–µ–Ω üî´–ú—É–ª—å—Ç–∏—Ç—É–ª')
    if '.captcha ' in text:
        if text == '.captcha on':
            hero['captcha'] = True
            await event.reply('–í–∫–ª—é—á–µ–Ω –∞–≤—Ç–æ–ø—Ä–æ—Ö–æ–¥ –∫–∞–ø—á–∏')
        elif text == '.captcha off':
            hero['captcha'] = False
            await event.reply('–í—ã–∫–ª—é—á–µ–Ω –∞–≤—Ç–æ–ø—Ä–æ—Ö–æ–¥ –∫–∞–ø—á–∏')
    if text.startswith('‚öîÔ∏è '):
        pin = text.split('\n')[0].split(' ')[1]
        point = await get_peh_point(pin.lower())
        print(point)
    update_file('hero', hero)
