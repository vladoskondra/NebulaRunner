import asyncio
from datetime import datetime, timedelta
from random import randint
from modules.starter.starter import client, hero, const
from modules.game.fight_sim import fight_simulation
from modules.utils.files import update_file

async def after_fight(text):
    hero["hero"]['energy'] = int(text.split('‚ö°Ô∏è –≠–Ω–µ—Ä–≥–∏—è: ')[1].split('/')[0])
    if '–ü–æ—Ç–µ—Ä—è–Ω–Ω—ã–π –æ–ø—ã—Ç' not in text:
        await asyncio.sleep(randint(2, 5))
        if f"{hero['hero']['name']}(‚ù§Ô∏è" in text:
            hero['hero']['cur_hp'] = int(text.split(f"{hero['hero']['name']}(‚ù§Ô∏è")[1].split('/')[0])
        elif f"{hero['hero']['name']}(üíî" in text:
            hero['hero']['cur_hp'] = int(text.split(f"{hero['hero']['name']}(üíî")[1].split('/')[0])
        print(hero['hero']['cur_hp'])
        win_chance = await fight_simulation()
        if win_chance >= 99.5 and hero['hero']['energy'] > 0:
            print(f'Can still fight with chance of {win_chance}')
            await client.edit_message('me', const["msg_status"], f"{const['orig_msg_status']}\n\n"
                                                                 f"–°—Ç–∞—Ç—É—Å: –ì–æ—Ç–æ–≤ –µ—â–µ –±–∏—Ç—å, —à–∞–Ω—Å –Ω–∞ —É—Å–ø–µ—Ö: {win_chance}")
            if hero['space']['cosmos']:
                if not hero['space']['cosmos_farm_seek']:
                    now = datetime.now()
                    resp = now + timedelta(minutes=15)
                    resp_text = resp.strftime("%H:%M:%S")
                    await client.edit_message('me', const["msg_status"], f"{const['orig_msg_status']}\n\n"
                                                                         f"–°—Ç–∞—Ç—É—Å: –ñ–¥—É —Ä–µ—Å–∞ –º–æ–±–∞ –≤ {resp_text}")
                    hero['state'] = 'waiting for mob res'
                    await asyncio.sleep(15*60)
                    hero['state'] = 'map seeker'
                await client.send_message(const['game'], 'üó∫ –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å')
            else:
                await client.send_message(const["game"], 'üëÄ –û—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Å—Ç–Ω–æ—Å—Ç—å')
        else:
            await client.edit_message('me', const["msg_status"], f"{const['orig_msg_status']}\n\n"
                                                                 f"–°—Ç–∞—Ç—É—Å: –°–æ–±–∏—Ä–∞—é—Å—å –¥–æ–º–æ–π")
            if hero['space']['cosmos']:
                hero['state'] = 'back to ship'
                await client.send_message(const['game'], 'üó∫ –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å')
            elif hero["general_cfg"]['edem'] is False:
                await client.send_message(const["game"], 'üèõ –ù–µ–∫—Ä–æ–ø–æ–ª–∏—Å')
                const["last_action"] = 'üèõ –ù–µ–∫—Ä–æ–ø–æ–ª–∏—Å'
                hero['state'] = 'to home'
            else:
                await client.send_message(const["game"], 'üåé –ù–æ–≤—ã–π –≠–¥–µ–º')
                const["last_action"] = 'üåé –ù–æ–≤—ã–π –≠–¥–µ–º'
                hero['state'] = 'to home'
    else:
        await client.edit_message('me', const["msg_status"], f"{const['orig_msg_status']}\n\n"
                                                             f"–°—Ç–∞—Ç—É—Å: –£–º–µ—Ä, –∂–¥—É —Ä–µ—Å–∞")
    print(f"End of AFTER FIGHT, current status: {hero['state']}")

    update_file('hero', hero)